"""empty message

Revision ID: 312bb00c859f
Revises: 
Create Date: 2024-08-08 18:02:14.708211

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '312bb00c859f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('short_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('miner_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hosting_cost', sa.String(), nullable=True),
    sa.Column('dohod', sa.String(), nullable=True),
    sa.Column('rashod', sa.String(), nullable=True),
    sa.Column('profit', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('buy_cost', sa.Integer(), nullable=True),
    sa.Column('hashrate', sa.String(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('opened', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('telegram', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('inn', sa.String(), nullable=True),
    sa.Column('profile_type', sa.String(), nullable=True),
    sa.Column('last_totp', sa.String(), nullable=True),
    sa.Column('totp_sent', sa.DateTime(), nullable=True),
    sa.Column('wallet', sa.String(), nullable=True),
    sa.Column('mfa_key', sa.String(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('miner_name', sa.String(), nullable=True),
    sa.Column('miner_id', sa.String(), nullable=True),
    sa.Column('wallet_id', sa.String(), nullable=True),
    sa.Column('access_allowed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('buy_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('sender_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('isCustomerMessage', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resets_passwords_requests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_name', sa.String(), nullable=True),
    sa.Column('worker_id', sa.String(), nullable=True),
    sa.Column('worker_name', sa.String(), nullable=True),
    sa.Column('hashrate', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('miner_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['miner_item_id'], ['miner_items.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('worker_id'),
    sa.UniqueConstraint('worker_name')
    )
    op.create_table('buy_request_miner_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('buy_request_id', sa.Integer(), nullable=True),
    sa.Column('miner_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['buy_request_id'], ['buy_requests.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['miner_item_id'], ['miner_items.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('buy_request_miner_items')
    op.drop_table('workers')
    op.drop_table('resets_passwords_requests')
    op.drop_table('purchases_records')
    op.drop_table('messages')
    op.drop_table('buy_requests')
    op.drop_table('users')
    op.drop_table('tickets')
    op.drop_table('settings')
    op.drop_table('miner_items')
    op.drop_table('employees')
    op.drop_table('countries')
    # ### end Alembic commands ###
